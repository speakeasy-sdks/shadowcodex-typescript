/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class FilesRemoteShareSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class FilesRemoteShareRequest extends SpeakeasyBase {
  /**
   * Comma-separated list of channel IDs where the file will be shared.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channels",
  })
  channels?: string;

  /**
   * The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or `file` or both are required.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=external_id",
  })
  externalId?: string;

  /**
   * Specify a file registered with Slack by providing its ID. Either this field or `external_id` or both are required.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=file" })
  file?: string;

  /**
   * Authentication token. Requires scope: `remote_files:share`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;
}

export class FilesRemoteShareResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  defaultErrorTemplate?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  defaultSuccessTemplate?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
