/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class FilesListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class FilesListRequest extends SpeakeasyBase {
  /**
   * Filter files appearing in a specific channel, indicated by its ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channel",
  })
  channel?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: string;

  /**
   * Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=show_files_hidden_by_limit",
  })
  showFilesHiddenByLimit?: boolean;

  /**
   * Authentication token. Requires scope: `files:read`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;

  /**
   * Filter files created after this timestamp (inclusive).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ts_from",
  })
  tsFrom?: number;

  /**
   * Filter files created before this timestamp (inclusive).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ts_to" })
  tsTo?: number;

  /**
   * Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=types" })
  types?: string;

  /**
   * Filter files created by a single user.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user" })
  user?: string;
}

export class FilesListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  filesListErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  filesListSchema?: Record<string, Record<string, any>>;
}
