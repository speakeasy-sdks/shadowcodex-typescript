/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class TeamIntegrationLogsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class TeamIntegrationLogsRequest extends SpeakeasyBase {
  /**
   * Filter logs to this Slack app. Defaults to all logs.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=app_id",
  })
  appId?: string;

  /**
   * Filter logs with this change type. Defaults to all logs.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=change_type",
  })
  changeType?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: string;

  /**
   * Filter logs to this service. Defaults to all logs.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=service_id",
  })
  serviceId?: string;

  /**
   * Authentication token. Requires scope: `admin`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token: string;

  /**
   * Filter logs generated by this userâ€™s actions. Defaults to all logs.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user" })
  user?: string;
}

export class TeamIntegrationLogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  teamIntegrationLogsErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  teamIntegrationLogsSchema?: Record<string, Record<string, any>>;
}
