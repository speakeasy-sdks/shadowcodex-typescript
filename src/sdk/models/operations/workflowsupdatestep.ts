/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class WorkflowsUpdateStepSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class WorkflowsUpdateStepRequest extends SpeakeasyBase {
  /**
   * A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=inputs",
  })
  inputs?: string;

  /**
   * An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=outputs",
  })
  outputs?: string;

  /**
   * An optional field that can be used to override app image that is shown in the Workflow Builder.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=step_image_url",
  })
  stepImageUrl?: string;

  /**
   * An optional field that can be used to override the step name that is shown in the Workflow Builder.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=step_name",
  })
  stepName?: string;

  /**
   * Authentication token. Requires scope: `workflow.steps:execute`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;

  /**
   * A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=workflow_step_edit_id",
  })
  workflowStepEditId: string;
}

export class WorkflowsUpdateStepResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  defaultErrorTemplate?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  defaultSuccessTemplate?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
