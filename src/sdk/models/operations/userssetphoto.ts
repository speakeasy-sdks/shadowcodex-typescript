/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class UsersSetPhotoSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class UsersSetPhotoRequestBody extends SpeakeasyBase {
  /**
   * Width/height of crop box (always square)
   */
  @SpeakeasyMetadata({ data: "form, name=crop_w" })
  cropW?: string;

  /**
   * X coordinate of top-left corner of crop box
   */
  @SpeakeasyMetadata({ data: "form, name=crop_x" })
  cropX?: string;

  /**
   * Y coordinate of top-left corner of crop box
   */
  @SpeakeasyMetadata({ data: "form, name=crop_y" })
  cropY?: string;

  /**
   * File contents via `multipart/form-data`.
   */
  @SpeakeasyMetadata({ data: "form, name=image" })
  image?: string;

  /**
   * Authentication token. Requires scope: `users.profile:write`
   */
  @SpeakeasyMetadata({ data: "form, name=token" })
  token: string;
}

export class UsersSetPhotoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  usersSetPhotoErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  usersSetPhotoSchema?: Record<string, Record<string, any>>;
}
