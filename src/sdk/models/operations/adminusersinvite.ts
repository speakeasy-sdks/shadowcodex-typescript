/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class AdminUsersInviteSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class AdminUsersInviteApplicationJSON extends SpeakeasyBase {
  /**
   * A comma-separated list of `channel_id`s for this user to join. At least one channel is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel_ids" })
  channelIds: string;

  /**
   * An optional message to send to the user in the invite email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_message" })
  customMessage?: string;

  /**
   * The email address of the person to invite.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guest_expiration_ts" })
  guestExpirationTs?: string;

  /**
   * Is this user a multi-channel guest user? (default: false)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_restricted" })
  isRestricted?: boolean;

  /**
   * Is this user a single channel guest user? (default: false)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_ultra_restricted" })
  isUltraRestricted?: boolean;

  /**
   * Full name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "real_name" })
  realName?: string;

  /**
   * Allow this invite to be resent in the future if a user has not signed up yet. (default: false)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resend" })
  resend?: boolean;

  /**
   * The ID (`T1234`) of the workspace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "team_id" })
  teamId: string;
}

export class AdminUsersInviteRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: AdminUsersInviteApplicationJSON;

  /**
   * Authentication token. Requires scope: `admin.users:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class AdminUsersInviteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  defaultErrorTemplate?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  defaultSuccessTemplate?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
