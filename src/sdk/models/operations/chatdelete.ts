/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ChatDeleteSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class ChatDeleteApplicationJSON extends SpeakeasyBase {
  /**
   * Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as_user" })
  asUser?: boolean;

  /**
   * Channel containing the message to be deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: string;

  /**
   * Timestamp of the message to be deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ts" })
  ts?: number;
}

export class ChatDeleteRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ChatDeleteApplicationJSON;

  /**
   * Authentication token. Requires scope: `chat:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token?: string;
}

export class ChatDeleteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  chatDeleteErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  chatDeleteSuccessSchema?: Record<string, Record<string, any>>;
}
