/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class StarsAddSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class StarsAddApplicationJSON extends SpeakeasyBase {
  /**
   * Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: string;

  /**
   * File to add star to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file" })
  file?: string;

  /**
   * File comment to add star to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file_comment" })
  fileComment?: string;

  /**
   * Timestamp of the message to add star to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;
}

export class StarsAddRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: StarsAddApplicationJSON;

  /**
   * Authentication token. Requires scope: `stars:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class StarsAddResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  starsAddErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  starsAddSchema?: Record<string, Record<string, any>>;
}
