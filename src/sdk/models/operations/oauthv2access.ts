/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class OauthV2AccessSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class OauthV2AccessRequest extends SpeakeasyBase {
  /**
   * Issued when you created your application.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client_id",
  })
  clientId?: string;

  /**
   * Issued when you created your application.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client_secret",
  })
  clientSecret?: string;

  /**
   * The `code` param returned via the OAuth callback.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=code" })
  code: string;

  /**
   * This must match the originally submitted URI (if one was sent).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=redirect_uri",
  })
  redirectUri?: string;
}

export class OauthV2AccessResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  defaultErrorTemplate?: Record<string, Record<string, any>>;

  /**
   * Successful token request with scopes for both a bot user and a user token
   */
  @SpeakeasyMetadata()
  defaultSuccessTemplate?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
