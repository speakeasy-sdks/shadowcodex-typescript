/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class AdminConversationsGetConversationPrefsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class AdminConversationsGetConversationPrefsRequest extends SpeakeasyBase {
  /**
   * The channel to get preferences for.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channel_id",
  })
  channelId: string;

  /**
   * Authentication token. Requires scope: `admin.conversations:read`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class AdminConversationsGetConversationPrefsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  adminConversationsGetConversationPrefsSchema?: Record<
    string,
    Record<string, any>
  >;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  adminConversationsUnarchiveErrorSchema?: Record<string, Record<string, any>>;
}
