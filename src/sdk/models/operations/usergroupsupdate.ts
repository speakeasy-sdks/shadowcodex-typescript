/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UsergroupsUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class UsergroupsUpdateApplicationJSON extends SpeakeasyBase {
  /**
   * A comma separated string of encoded channel IDs for which the User Group uses as a default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channels" })
  channels?: string;

  /**
   * A short description of the User Group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A mention handle. Must be unique among channels, users and User Groups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;

  /**
   * Include the number of users in the User Group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "include_count" })
  includeCount?: boolean;

  /**
   * A name for the User Group. Must be unique among User Groups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The encoded ID of the User Group to update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usergroup" })
  usergroup: string;
}

export class UsergroupsUpdateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UsergroupsUpdateApplicationJSON;

  /**
   * Authentication token. Requires scope: `usergroups:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class UsergroupsUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  usergroupsUpdateErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  usergroupsUpdateSchema?: Record<string, Record<string, any>>;
}
