/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ChatUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class ChatUpdateApplicationJSON extends SpeakeasyBase {
  /**
   * Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as_user" })
  asUser?: string;

  /**
   * A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachments" })
  attachments?: string;

  /**
   * A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blocks" })
  blocks?: string;

  /**
   * Channel containing the message to be updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel: string;

  /**
   * Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link_names" })
  linkNames?: string;

  /**
   * Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parse" })
  parse?: string;

  /**
   * New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;

  /**
   * Timestamp of the message to be updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ts" })
  ts: string;
}

export class ChatUpdateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ChatUpdateApplicationJSON;

  /**
   * Authentication token. Requires scope: `chat:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class ChatUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  chatUpdateErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  chatUpdateSuccessSchema?: Record<string, Record<string, any>>;
}
