/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class AdminConversationsEkmListOriginalConnectedChannelInfoSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class AdminConversationsEkmListOriginalConnectedChannelInfoRequest extends SpeakeasyBase {
  /**
   * A comma-separated list of channels to filter to.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channel_ids",
  })
  channelIds?: string;

  /**
   * Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The maximum number of items to return. Must be between 1 - 1000 both inclusive.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * A comma-separated list of the workspaces to which the channels you would like returned belong.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=team_ids",
  })
  teamIds?: string;

  /**
   * Authentication token. Requires scope: `admin.conversations:read`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token: string;
}

export class AdminConversationsEkmListOriginalConnectedChannelInfoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  defaultErrorTemplate?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  defaultSuccessTemplate?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
