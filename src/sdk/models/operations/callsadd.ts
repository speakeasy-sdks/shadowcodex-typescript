/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CallsAddSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class CallsAddApplicationJSON extends SpeakeasyBase {
  /**
   * The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Call start time in UTC UNIX timestamp format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_start" })
  dateStart?: number;

  /**
   * When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desktop_app_join_url" })
  desktopAppJoinUrl?: string;

  /**
   * An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_display_id" })
  externalDisplayId?: string;

  /**
   * An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_unique_id" })
  externalUniqueId: string;

  /**
   * The URL required for a client to join the Call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "join_url" })
  joinUrl: string;

  /**
   * The name of the Call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "users" })
  users?: string;
}

export class CallsAddRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CallsAddApplicationJSON;

  /**
   * Authentication token. Requires scope: `calls:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class CallsAddResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  defaultErrorTemplate?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  defaultSuccessTemplate?: Record<string, Record<string, any>>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
