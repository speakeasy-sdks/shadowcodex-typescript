/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ReactionsGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class ReactionsGetRequest extends SpeakeasyBase {
  /**
   * Channel where the message to get reactions for was posted.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channel",
  })
  channel?: string;

  /**
   * File to get reactions for.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=file" })
  file?: string;

  /**
   * File comment to get reactions for.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=file_comment",
  })
  fileComment?: string;

  /**
   * If true always return the complete reaction list.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=full" })
  full?: boolean;

  /**
   * Timestamp of the message to get reactions for.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timestamp",
  })
  timestamp?: string;

  /**
   * Authentication token. Requires scope: `reactions:read`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token: string;
}

export class ReactionsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  reactionsGetErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  reactionsGetSuccessSchema?: Record<string, any>;
}
