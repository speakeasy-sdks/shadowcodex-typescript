/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class AdminConversationsDisconnectSharedSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class AdminConversationsDisconnectSharedApplicationJSON extends SpeakeasyBase {
  /**
   * The channel to be disconnected from some workspaces.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel_id" })
  channelId: string;

  /**
   * The team to be removed from the channel. Currently only a single team id can be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leaving_team_ids" })
  leavingTeamIds?: string;
}

export class AdminConversationsDisconnectSharedRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: AdminConversationsDisconnectSharedApplicationJSON;

  /**
   * Authentication token. Requires scope: `admin.conversations:write`
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=token" })
  token: string;
}

export class AdminConversationsDisconnectSharedResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  adminConversationsDisconnectSharedErrorSchema?: Record<
    string,
    Record<string, any>
  >;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  adminConversationsRenameSchema?: Record<string, Record<string, any>>;
}
