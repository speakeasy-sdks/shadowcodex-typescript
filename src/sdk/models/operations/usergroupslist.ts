/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class UsergroupsListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  slackAuth: string;
}

export class UsergroupsListRequest extends SpeakeasyBase {
  /**
   * Include the number of users in each User Group.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_count",
  })
  includeCount?: boolean;

  /**
   * Include disabled User Groups.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_disabled",
  })
  includeDisabled?: boolean;

  /**
   * Include the list of users for each User Group.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_users",
  })
  includeUsers?: boolean;

  /**
   * Authentication token. Requires scope: `usergroups:read`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token: string;
}

export class UsergroupsListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Typical error response
   */
  @SpeakeasyMetadata()
  usergroupsListErrorSchema?: Record<string, Record<string, any>>;

  /**
   * Typical success response
   */
  @SpeakeasyMetadata()
  usergroupsListSchema?: Record<string, Record<string, any>>;
}
